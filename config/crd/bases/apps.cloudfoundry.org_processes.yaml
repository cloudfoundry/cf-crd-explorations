
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: processes.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: Process
    listKind: ProcessList
    plural: processes
    singular: process
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Process is the Schema for the processes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProcessSpec defines the desired state of Process
            properties:
              appRef:
                description: Specifies the App that owns this process
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              command:
                description: Specifies the Command(k8s) ENTRYPOINT(Docker) of the Process
                type: string
              diskQuotaMB:
                description: Specifies the Process disk limit
                format: int64
                type: integer
              healthCheck:
                description: Specifies the Liveness Probe (k8s) details of the Process
                properties:
                  data:
                    description: Specifies the input parameters for the liveness probe/health check in kubernetes
                    properties:
                      httpEndpoint:
                        description: HTTPEndpoint is only used by an "http" liveness probe
                        type: string
                      invocationTimeoutSeconds:
                        format: int64
                        type: integer
                      timeoutSeconds:
                        format: int64
                        type: integer
                    required:
                    - invocationTimeoutSeconds
                    - timeoutSeconds
                    type: object
                  type:
                    description: 'Specifies the type of Health Check the App process will use Valid values are: "http": http health check "port": TCP health check "process" (default): checks if process for start command is still alive'
                    enum:
                    - http
                    - port
                    - process
                    type: string
                required:
                - data
                - type
                type: object
              instances:
                description: Specifies the number of Process replicas to deploy
                type: integer
              memoryMB:
                description: Specifies the Process memory limit
                format: int64
                type: integer
              ports:
                description: Specifies the Process ports to expose
                items:
                  format: int32
                  type: integer
                type: array
              processType:
                description: Specifies the name of the process in the App
                type: string
              sidecars:
                description: 'Specifies the sidecars to be run alongside the Process TODO: Should this be its own CRD?, essentially lives at AppManifest and Process level simultaneously'
                items:
                  description: ProcessSidecar defines sidecars explicitly run with the Process
                  properties:
                    command:
                      description: Command is the K8s Command/ENTRYPOINT
                      type: string
                    memoryMB:
                      format: int64
                      type: integer
                    name:
                      type: string
                  required:
                  - command
                  - memoryMB
                  - name
                  type: object
                type: array
              state:
                description: 'Specifies the current state of the process Valid values are: "STARTED": App is started "STOPPED": App is stopped'
                enum:
                - STARTED
                - STOPPED
                type: string
            required:
            - appRef
            - diskQuotaMB
            - healthCheck
            - instances
            - memoryMB
            - ports
            - processType
            - sidecars
            - state
            type: object
          status:
            description: ProcessStatus defines the observed state of Process
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              imageRef:
                description: 'TODO: Open question: Should this be flexible and use the "latestImage" duck type to allow for easier handling of stack updates in the background or should it be closer to the original design of the CF Droplet and only refer to a static image Denormalized from the Droplet status'
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              instances:
                format: int64
                type: integer
            required:
            - conditions
            - imageRef
            - instances
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

# DO NOT USE - Generated by Kustomize
# These CRDs collide with the Kubebuilder generated CRDs
# Included as a curiosity since the CRDs don't have the same structure

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: appmanifests.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: AppManifest
    listKind: AppManifestList
    plural: appmanifests
    singular: appmanifest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppManifest is the Schema for the appmanifests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppManifestSpec defines the desired state of AppManifest
            properties:
              buildpacks:
                items:
                  type: string
                type: array
              env:
                additionalProperties:
                  type: string
                type: object
              name:
                type: string
              processes:
                items:
                  description: 'TODO: all of these fields probably need to be marked
                    as optional json omitempty make call after we decide if Manifests
                    CRD is the way'
                  properties:
                    command:
                      type: string
                    disk_quota:
                      type: string
                    health-check-http-endpoint:
                      type: string
                    health-check-invocation-timeout:
                      format: int64
                      type: integer
                    health-check-type:
                      type: string
                    instances:
                      format: int64
                      type: integer
                    memory:
                      type: string
                    timeout:
                      description: 'When it can be opitional need to use *int64 TODO:
                        We need to think through how defaulting for omitted values
                        might work in the shim'
                      format: int64
                      type: integer
                    type:
                      type: string
                  required:
                  - type
                  type: object
                type: array
              routes:
                items:
                  properties:
                    route:
                      type: string
                  required:
                  - route
                  type: object
                type: array
              services:
                items:
                  type: object
                type: array
              sidecars:
                items:
                  properties:
                    command:
                      type: string
                    memory:
                      description: 'TODO: have discussion on input validation like
                        "10M" kubebuilder may have special input type that we can
                        use'
                      type: string
                    name:
                      type: string
                    process_types:
                      items:
                        type: string
                      type: array
                  required:
                  - command
                  - memory
                  - name
                  - process_types
                  type: object
                type: array
              stack:
                type: string
            required:
            - buildpacks
            - env
            - name
            - processes
            - routes
            - services
            - sidecars
            - stack
            type: object
          status:
            description: AppManifestStatus defines the observed state of AppManifest
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: apps.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'App is the Schema for the apps API CF API Docs for App: https://v3-apidocs.cloudfoundry.org/version/3.101.0/index.html#the-app-object'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppSpec defines the desired state of App
            properties:
              currentDropletRef:
                description: Specifies the Droplet info for the droplet that is currently
                  assigned (active) for the app
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              envSecretName:
                description: Specifies the k8s secret name with the App credentials
                  and other private info
                type: string
              lifecycle:
                description: Specifies how to build droplets and run apps container
                  for list of buildpacks and stack to build them for docker this is
                  empty
                properties:
                  data:
                    description: Lifecycle data used to specify details for the Lifecycle
                    properties:
                      buildpacks:
                        description: List of buildpacks used to build the app with
                          kpack
                        items:
                          type: string
                        type: array
                      stack:
                        description: Stack may be legacy from Diego, configured separately
                          for kpack?
                        type: string
                    required:
                    - buildpacks
                    - stack
                    type: object
                required:
                - data
                type: object
              name:
                type: string
              state:
                description: 'Specifies the current state of the app Valid values
                  are: "STARTED": App is started "STOPPED": App is stopped'
                enum:
                - STARTED
                - STOPPED
                type: string
              type:
                description: 'Specifies the CF Lifecycle type: https://v3-apidocs.cloudfoundry.org/version/3.101.0/index.html#sample-requests
                  Valid values are: "docker": run prebuilt docker image "kpack": stage
                  the app using kpack'
                enum:
                - docker
                - kpack
                type: string
            required:
            - currentDropletRef
            - envSecretName
            - lifecycle
            - name
            - state
            - type
            type: object
          status:
            description: AppStatus defines the observed state of App
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: builds.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: Build
    listKind: BuildList
    plural: builds
    singular: build
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Build is the Schema for the builds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'EDIT THIS FILE! THIS IS SCAFFOLDING FOR YOU TO OWN! NOTE:
              json tags are required. Any new fields you add must have json tags for
              the fields to be serialized. BuildSpec defines the desired state of
              Build'
            properties:
              appRef:
                description: Specifies the App associated with this build
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              kpackBuildSelector:
                description: Optional, Links kpack builds explicitly
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - matchLabels
                type: object
              kpackImageTemplate:
                description: Optional, specify labels to put on generated kpack image
                properties:
                  metadata:
                    type: object
                type: object
              lifecycleData:
                description: Specifies the buildpacks and stack of the build, empty
                  for docker
                properties:
                  buildpacks:
                    description: List of buildpacks used to build the app with kpack
                    items:
                      type: string
                    type: array
                  stack:
                    description: Stack may be legacy from Diego, configured separately
                      for kpack?
                    type: string
                required:
                - buildpacks
                - stack
                type: object
              packageRef:
                description: Specifies the Package associated with this build
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              type:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  Specifies the lifecycle type kpack or docker of the build'
                enum:
                - docker
                - kpack
                type: string
            required:
            - appRef
            - packageRef
            - type
            type: object
          status:
            description: BuildStatus defines the observed state of Build
            properties:
              conditions:
                description: Contains the current status of the build
                items:
                  description: 'TODO: Double check that we are using the correct the
                    condition type from kubernetes Loosely following this KEP: https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1623-standardize-conditions
                    Eventually we can update to use standard Kubernetes types'
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dropletRef:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Contains a reference to the compiled build image'
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              kpackBuildRef:
                description: Contains a reference to the latest kpack build CRD for
                  the kpack image (uses the kpackBuildSelector)
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              kpackImageRef:
                description: Contains a reference to the kpack image CRD for the cf
                  Build
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: droplets.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: Droplet
    listKind: DropletList
    plural: droplets
    singular: droplet
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Droplet is the Schema for the droplets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DropletSpec defines the desired state of Droplet
            properties:
              appRef:
                description: Specifies the App associated with this Droplet
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              buildRef:
                description: Specifies the Build associated with this Droplet
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              type:
                description: Specifies the Lifecycle type kpack or docker of the droplet
                enum:
                - docker
                - kpack
                type: string
            required:
            - appRef
            - buildRef
            - type
            type: object
          status:
            description: DropletStatus defines the observed state of Droplet
            properties:
              conditions:
                description: Describes the conditions of the Droplet
                items:
                  description: 'TODO: Double check that we are using the correct the
                    condition type from kubernetes Loosely following this KEP: https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1623-standardize-conditions
                    Eventually we can update to use standard Kubernetes types'
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              image:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  pullSecretName:
                    type: string
                  reference:
                    type: string
                required:
                - pullSecretName
                - reference
                type: object
              imageRef:
                description: 'TODO: Open question: Should this be flexible and use
                  the "latestImage" duck type to allow for easier handling of stack
                  updates in the background or should it be closer to the original
                  design of the CF Droplet and only refer to a static image'
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              lifecycleData:
                description: Describes Docker metadata including ports the container
                  exposes
                properties:
                  executionMetadata:
                    description: 'TODO: Decide if we need this Marshalled blob of
                      JSON goo'
                    type: string
                required:
                - executionMetadata
                type: object
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: packages.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: Package
    listKind: PackageList
    plural: packages
    singular: package
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Package is the Schema for the packages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageSpec defines the desired state of Package
            properties:
              appRef:
                description: Specifies the App that owns this package
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              sourceImage:
                description: Specifies the details for the docker image and registry
                  for docker package flow
                properties:
                  pullSecretName:
                    description: This is the k8s secret that contains the details
                      to pull the docker image
                    type: string
                  reference:
                    type: string
                required:
                - reference
                type: object
              type:
                description: 'Specifies the package type, either bits or docker Valid
                  values are: "bits": package to upload source code "docker": package
                  references a docker image from a registry'
                enum:
                - bits
                - docker
                type: string
            required:
            - appRef
            - type
            type: object
          status:
            description: PackageStatus defines the observed state of Package
            properties:
              checksum:
                description: Contains the checksum for the packaged source code image
                properties:
                  type:
                    description: CheckSumType restrict allowed checksum types to enum
                    enum:
                    - sha256
                    - sha1
                    type: string
                  value:
                    type: string
                required:
                - type
                - value
                type: object
              conditions:
                description: Contains the current status of the package
                items:
                  description: 'TODO: Double check that we are using the correct the
                    condition type from kubernetes Loosely following this KEP: https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1623-standardize-conditions
                    Eventually we can update to use standard Kubernetes types'
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              image:
                description: Contains the packaged source code as a image
                properties:
                  pullSecretName:
                    description: This is the k8s secret that contains the details
                      to pull the docker image
                    type: string
                  reference:
                    type: string
                required:
                - reference
                type: object
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: processes.apps.cloudfoundry.org
spec:
  group: apps.cloudfoundry.org
  names:
    kind: Process
    listKind: ProcessList
    plural: processes
    singular: process
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Process is the Schema for the processes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProcessSpec defines the desired state of Process
            properties:
              appRef:
                description: Specifies the App that owns this process
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              command:
                description: Specifies the Command(k8s) ENTRYPOINT(Docker) of the
                  Process
                type: string
              diskQuotaMB:
                description: Specifies the Process disk limit
                format: int64
                type: integer
              healthCheck:
                description: Specifies the Liveness Probe (k8s) details of the Process
                properties:
                  data:
                    description: Specifies the input parameters for the liveness probe/health
                      check in kubernetes
                    properties:
                      httpEndpoint:
                        description: HTTPEndpoint is only used by an "http" liveness
                          probe
                        type: string
                      invocationTimeoutSeconds:
                        format: int64
                        type: integer
                      timeoutSeconds:
                        format: int64
                        type: integer
                    required:
                    - invocationTimeoutSeconds
                    - timeoutSeconds
                    type: object
                  type:
                    description: 'Specifies the type of Health Check the App process
                      will use Valid values are: "http": http health check "port":
                      TCP health check "process" (default): checks if process for
                      start command is still alive'
                    enum:
                    - http
                    - port
                    - process
                    type: string
                required:
                - data
                - type
                type: object
              instances:
                description: Specifies the number of Process replicas to deploy
                type: integer
              memoryMB:
                description: Specifies the Process memory limit
                format: int64
                type: integer
              ports:
                description: Specifies the Process ports to expose
                items:
                  format: int32
                  type: integer
                type: array
              processType:
                description: Specifies the name of the process in the App
                type: string
              sidecars:
                description: 'Specifies the sidecars to be run alongside the Process
                  TODO: Should this be its own CRD?, essentially lives at AppManifest
                  and Process level simultaneously'
                items:
                  description: ProcessSidecar defines sidecars explicitly run with
                    the Process
                  properties:
                    command:
                      description: Command is the K8s Command/ENTRYPOINT
                      type: string
                    memoryMB:
                      format: int64
                      type: integer
                    name:
                      type: string
                  required:
                  - command
                  - memoryMB
                  - name
                  type: object
                type: array
              state:
                description: 'Specifies the current state of the process Valid values
                  are: "STARTED": App is started "STOPPED": App is stopped'
                enum:
                - STARTED
                - STOPPED
                type: string
            required:
            - appRef
            - diskQuotaMB
            - healthCheck
            - instances
            - memoryMB
            - ports
            - processType
            - sidecars
            - state
            type: object
          status:
            description: ProcessStatus defines the observed state of Process
            properties:
              conditions:
                items:
                  description: 'TODO: Double check that we are using the correct the
                    condition type from kubernetes Loosely following this KEP: https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1623-standardize-conditions
                    Eventually we can update to use standard Kubernetes types'
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              imageRef:
                description: 'TODO: Open question: Should this be flexible and use
                  the "latestImage" duck type to allow for easier handling of stack
                  updates in the background or should it be closer to the original
                  design of the CF Droplet and only refer to a static image Denormalized
                  from the Droplet status'
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
              instances:
                format: int64
                type: integer
            required:
            - conditions
            - imageRef
            - instances
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []